-- MySQL Script generated by MySQL Workbench
-- чт, 14-чер-2018 15:20:52 +0300
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema printer_db
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `printer_db` ;

-- -----------------------------------------------------
-- Schema printer_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `printer_db` DEFAULT CHARACTER SET utf8 ;
USE `printer_db` ;

-- -----------------------------------------------------
-- Table `printer_db`.`brand`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `printer_db`.`brand` ;

CREATE TABLE IF NOT EXISTS `printer_db`.`brand` (
  `id` INT(3) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(2000) NULL DEFAULT '',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE UNIQUE INDEX `name` ON `printer_db`.`brand` (`name` ASC);


-- -----------------------------------------------------
-- Table `printer_db`.`function_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `printer_db`.`function_type` ;

CREATE TABLE IF NOT EXISTS `printer_db`.`function_type` (
  `id` INT(1) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(2000) NULL DEFAULT '',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE UNIQUE INDEX `name` ON `printer_db`.`function_type` (`name` ASC);


-- -----------------------------------------------------
-- Table `printer_db`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `printer_db`.`user` ;

CREATE TABLE IF NOT EXISTS `printer_db`.`user` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(255) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `password` VARCHAR(40) NOT NULL,
  `is_admin` TINYINT(1) NOT NULL DEFAULT '0',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE UNIQUE INDEX `email_UNIQUE` ON `printer_db`.`user` (`email` ASC);


-- -----------------------------------------------------
-- Table `printer_db`.`order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `printer_db`.`order` ;

CREATE TABLE IF NOT EXISTS `printer_db`.`order` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `cost` INT(10) UNSIGNED NOT NULL DEFAULT 0,
  `status` INT(1) UNSIGNED NOT NULL DEFAULT 0,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `user_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_order_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `printer_db`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_order_user1_idx` ON `printer_db`.`order` (`user_id` ASC);


-- -----------------------------------------------------
-- Table `printer_db`.`print_resolution`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `printer_db`.`print_resolution` ;

CREATE TABLE IF NOT EXISTS `printer_db`.`print_resolution` (
  `x` INT(3) UNSIGNED NOT NULL AUTO_INCREMENT,
  `y` INT(3) UNSIGNED NOT NULL,
  PRIMARY KEY (`x`, `y`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `printer_db`.`print_size`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `printer_db`.`print_size` ;

CREATE TABLE IF NOT EXISTS `printer_db`.`print_size` (
  `id` INT(1) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(2) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `printer_db`.`printing_technology`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `printer_db`.`printing_technology` ;

CREATE TABLE IF NOT EXISTS `printer_db`.`printing_technology` (
  `id` INT(2) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(55) NOT NULL,
  `description` VARCHAR(2000) NULL DEFAULT '',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE UNIQUE INDEX `name` ON `printer_db`.`printing_technology` (`name` ASC);


-- -----------------------------------------------------
-- Table `printer_db`.`printer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `printer_db`.`printer` ;

CREATE TABLE IF NOT EXISTS `printer_db`.`printer` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `description` VARCHAR(10000) NULL DEFAULT '',
  `page_per_minute` FLOAT(32) UNSIGNED NOT NULL,
  `size` VARCHAR(45) NULL DEFAULT '',
  `weight` FLOAT(32) NULL DEFAULT 0,
  `additional_info` VARCHAR(10000) NULL DEFAULT '',
  `amount` INT(4) UNSIGNED NOT NULL,
  `price` INT(10) UNSIGNED NOT NULL,
  `brand_id` INT(10) UNSIGNED NOT NULL,
  `function_type_id` INT(10) UNSIGNED NOT NULL,
  `printing_technology_id` INT(10) UNSIGNED NOT NULL,
  `print_size_id` INT UNSIGNED NOT NULL,
  `print_resolution_x` INT(10) UNSIGNED NOT NULL,
  `print_resolution_y` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_printer_brand1`
    FOREIGN KEY (`brand_id`)
    REFERENCES `printer_db`.`brand` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_printer_function_type1`
    FOREIGN KEY (`function_type_id`)
    REFERENCES `printer_db`.`function_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_printer_print_size1`
    FOREIGN KEY (`print_size_id`)
    REFERENCES `printer_db`.`print_size` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_printer_print_resolution1`
    FOREIGN KEY (`print_resolution_x` , `print_resolution_y`)
    REFERENCES `printer_db`.`print_resolution` (`x` , `y`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_printer_printing_technology1`
    FOREIGN KEY (`printing_technology_id`)
    REFERENCES `printer_db`.`printing_technology` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE UNIQUE INDEX `name` ON `printer_db`.`printer` (`name` ASC);

CREATE INDEX `fk_printer_brand1_idx` ON `printer_db`.`printer` (`brand_id` ASC);

CREATE INDEX `fk_printer_function_type1_idx` ON `printer_db`.`printer` (`function_type_id` ASC);

CREATE INDEX `fk_printer_print_size1_idx` ON `printer_db`.`printer` (`print_size_id` ASC);

CREATE INDEX `fk_printer_print_resolution1_idx` ON `printer_db`.`printer` (`print_resolution_x` ASC, `print_resolution_y` ASC);

CREATE INDEX `fk_printer_printing_technology1_idx` ON `printer_db`.`printer` (`printing_technology_id` ASC);


-- -----------------------------------------------------
-- Table `printer_db`.`order_has_printer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `printer_db`.`order_has_printer` ;

CREATE TABLE IF NOT EXISTS `printer_db`.`order_has_printer` (
  `order_id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `printer_id` INT(10) UNSIGNED NOT NULL,
  `amount` INT(2) UNSIGNED NOT NULL,
  PRIMARY KEY (`order_id`, `printer_id`),
  CONSTRAINT `fk_order_has_printer_order1`
    FOREIGN KEY (`order_id`)
    REFERENCES `printer_db`.`order` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_order_has_printer_printer1`
    FOREIGN KEY (`printer_id`)
    REFERENCES `printer_db`.`printer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_order_has_printer_printer1_idx` ON `printer_db`.`order_has_printer` (`printer_id` ASC);

CREATE INDEX `fk_order_has_printer_order1_idx` ON `printer_db`.`order_has_printer` (`order_id` ASC);

USE `printer_db`;

DELIMITER $$

USE `printer_db`$$
DROP TRIGGER IF EXISTS `printer_db`.`order_has_printer_AFTER_INSERT` $$
USE `printer_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `printer_db`.`order_has_printer_AFTER_INSERT` AFTER INSERT ON `order_has_printer` FOR EACH ROW
BEGIN
	UPDATE `order`
           SET cost = cost + NEW.amount * (SELECT price FROM printer WHERE id=NEW.printer_id)
           WHERE id = NEW.order_id;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
